"""
Ваш босс очень экономный человек. Он намерен ввести в организации очень строгие требования 
по расходованию тонера в принтерах. Для этого он хочет выявить сотрудников, которые пишут тексты, 
требующие повышенного расхода тонера.

Ваша задача -- написать драйвер, который перехватывает текст, отсылаемый на принтер, и скрытно 
записывает в базу количество тонера, требуемого для его печати.

Каждый символ требует свой объём тонера. Пробел, очевидно, вообще не расходует ресурсы, а вот 
например амперсанд @ подразумевает расход аж 32 условных единиц тонера. В документации к принтеру 
имеется таблица раскладки символов ASCII и соответствующего им объёма тонера. Используйте её, 
чтобы оценить расход тонера на печатаемый текст.

(пробел) 0   !   9        "   6        #  24        $  29        %  22
&  24        '   3        (  12        )  12        *  17        +  13
,   7        -   7        .   4        /  10        0  22        1  19
2  22        3  23        4  21        5  27        6  26        7  16
8  23        9  26        :   8        ;  11        <  10        =  14
>  10        ?  15        @  32        A  24        B  29        C  20
D  26        E  26        F  20        G  25        H  25        I  18
J  18        K  21        L  16        M  28        N  25        O  26
P  23        Q  31        R  28        S  25        T  16        U  23
V  19        W  26        X  18        Y  14        Z  22        [  18
\  10        ]  18        ^   7        _   8        `   3        a  23
b  25        c  17        d  25        e  23        f  18        g  30
h  21        i  15        j  20        k  21        l  16        m  22
n  18        o  20        p  25        q  25        r  13        s  21
t  17        u  17        v  13        w  19        x  13        y  24
z  19        {  18        |  12        }  18        ~   9        
Функция

int PrintingCosts(string Line)
получает на вход строку Line. На выходе формируется расход тонера по этой строке, который получается 
как сумма расходов тонера по всем символам строки. Если встречается символ, не учитываемый таблицей 
из документации, используйте значение 23.
"""

def PrintingCosts(Line):
    dictionary_of_symbols = {" ":0, "&":24, ",":7, "2":22, "8":23, ">":10, "D":26,
    "J":18, "P":23, "V":19, "\\":10, "b":25, "h":21, "n":18, "t":17, "z":19,
    "!":9, "'":3, "-":7, "3":23, "9":26, "?":15, "E":26, "K":21, "Q":31,
    "W":26, "]":18, "c":17, "i":15, "o":20, "u":17, "{":18, '"':6, "(":12,
    ".":4, "4":21, ":":8, "@":32, "F":20, "L":16, "R":28, "X":18, "^":7,
    "d":25, "j":20, "p":25, "v":13, "|":12, "#":24, ")":12, "/":10, "5":27,
    ";":11, "A":24, "G":25, "M":28, "S":25, "Y":14, "_":8, "e":23, "k":21,
    "q":25, "w":19, "}":18, "$":29, "*":17, "0":22, "6":26, "<":10, "B":29,
    "H":25, "N":25, "T":16, "Z":22, "`":3, "f":18, "l":16, "r":13, "x":13,
    "~":9, "%":22, "+":13, "1":19, "7":16, "=":14, "C":20, "I":18, "O":26,
    "U":23, "[":18, "a":23, "g":30, "m":22, "s":21, "y":24}
    toner_rate_amount = 0
    for i in Line:
        if i in dictionary_of_symbols:
            toner_rate_amount += dictionary_of_symbols[i]
        else:
            toner_rate_amount += 23
    return toner_rate_amount
    