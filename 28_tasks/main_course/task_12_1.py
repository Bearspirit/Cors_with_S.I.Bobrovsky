"""
Хакер Эллиот (Мистер Робот) подбирает код для проникновения в хранилище данных "Стальная гора". 
Он собирается взломать систему климат-контроля, чтобы уничтожить все магнитные ленты Корпорации Зла. 
Помогите Эллиоту подобрать подходящий смарт-контроллер, который бы допускал потенциальную возможность взлома.


Для анализа поступает массив, в котором случайно перемешаны числа от 1 до N (без пропусков), N > 4.
Например, N=7 [1,3,4,5,6,2,7]

Хакерская утилита может делать только одну операцию: брать любые три идущие подряд элемента массива, 
и сдвигать их по кругу влево произвольное количество раз. Но эту операцию она может выполнять неограниченное количество раз.

Например:

[1,3,4,5,6,2,7] [5,6,2] -> [6,2,5] -> [2,5,6]
[1,3,4,2,5,6,7] [3,4,2] -> [4,2,3] -> [2,3,4]
[1,2,3,4,5,6,7] OK
Задача: определить, можно ли с помощью этой операции превратить массив в упорядоченный по возрастанию. 
Программа должна работать быстро (укладываться в 1 секунду при N ~= 10).

Функция

bool MisterRobot(int N, int [] data) 
получает значение N и сам массив, и возвращает true, если этот массив возможно упорядочить вышеописанным способом.
"""

def MisterRobot(N, data):
    x = 0
    y = 0
    b = 0
    list = []
    for i in range(N-1, 1, -1):
        if data[i]-1 != data[i-1]:
            if data[i] > data[i-1]:
                list = data[i-3:i]
                while y < 3:                   
                    if ((list[0]) < list[1]) and ((list[1]) < list[2]):
                        break
                    else:
                        list = list[1:] + list[:1]
                        y += 1
                y = 0
                data = data[:i-3] + list[:] + data[i:]
            else:
                if i == N-1:
                    list = data[i-2:i+1]
                else:
                    list = data[i-1:i+2]
                while y < 3:                   
                    if ((list[0]) < list[1]) and ((list[1]) < list[2]):
                        break
                    else:
                        list = list[1:] + list[:1]
                        y += 1
                if ((list[0]) > list[1]) or ((list[1]) > list[2]):
                    return False
                y = 0
                if i == N-1:
                    data = data[:i-2] + list[:] + data[i+1:]
                else:
                    data = data[:i-1] + list[:] + data[i+2:]
    
    for i in range(0, N-1):         
        if data[i]+1 != data[i+1]:
            return False
    else:
        return True 
