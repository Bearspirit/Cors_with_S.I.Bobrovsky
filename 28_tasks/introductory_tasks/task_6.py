"""
Код блокировки мобильных телефонов не умеют взламывать даже спецслужбы, 
однако хакерская группировка Анонимусы-80 добралась до исходников операционной системы, 
и выяснила способ его почти мгновенного взлома.

Оказывается, достаточно лишь посчитать длину линии, рисуемой в процессе взлома кода, 
после чего округлить её до пятого знака, и нажать пальцем на соответствующие цифры, 
пропуская нули, как телефон разблокируется.
Ломаная линия разблокировки представляет собой последовательность цифр от 1 до 9, 
соответствующих точкам на этой картинке, причем гарантируется, что от точки переход 
совершается только к её ближайшим соседям (нету перепрыгиваний, например из точки 8 в точку 5).
Расстояние между точками по вертикали или горизонтали считается единичным.

На рисунке представлена такая последовательность: 1 2 3 4 5 6 2 7 8 9

Её длина приблизительно равняется 1 + 1 + 1 + 1 + 1 + 1.41.. + 1.41.. + 1 + 1 = 9.82843
(точность требуется пять цифр после запятой)

Результат: строка "982843"

Если бы результат получился, например, 10.012, то результирующая строка получилась бы "112" (все нули удаляются).

Функция

string PatternUnlock(int N, int [] hits) 
получает параметром N длину массива с кодами разблокировки, а сам массив hits содержит последовательность 
кодов разблокировки -- номера точек в диапазоне от 1 до 9.
Последовательность задаётся только шагами между соседними точками, программно искать "длинные" пути не нужно.
Серые линии на рисунке -- просто пример возможной траектории.
Возвращает функция строку, как в примере выше.
"""

def PatternUnlock(N, hits):
    line_lenght = 0
    for i in range(0, N-1):
        if hits[i]+1 == hits[i+1]:
            line_lenght += 1        
        elif hits[i]-1 == hits[i+1]:
            line_lenght += 1
        elif hits[i] == 6 and hits[i+1] == 1:
            line_lenght += 1
        elif (hits[i] == 1)  and (hits[i+1] == 6 or hits[i+1] == 9):
            line_lenght += 1 
        elif hits[i] == 9 and hits[i+1] == 1:
            line_lenght += 1
        elif hits[i] == 5 and hits[i+1] == 2:
            line_lenght += 1
        elif (hits[i] == 2) and (hits[i+1] == 5 or hits[i+1] == 8):
            line_lenght += 1
        elif hits[i] == 8 and hits[i+1] == 2:
            line_lenght += 1
        elif hits[i] == 3 and hits[i+1] == 7:
            line_lenght += 1
        elif hits[i] == 7 and hits[i+1] == 3:
            line_lenght += 1
        else:
            line_lenght += 1.41421356
    
    hacking_code =str(round(line_lenght, 5))
    hacking_code = hacking_code.replace(".", "")
    hacking_code = hacking_code.replace("0", "")
    return hacking_code